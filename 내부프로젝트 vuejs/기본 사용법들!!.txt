<template>
	
	<div>
	
		<h1>Wlecome to {{num2}}!</h1>
		<input type="text" v-model="num">   //v-model="데이터 가져오기"
		<button type="button" @click="setData">Set</button>  //버튼 @click="함수명" 으로 함수 실행시키기!!!
		<button type="button" @click="getData">Get</button>
			
		
		<select class="form-control" v-model="region" @change="change">
			<option :key="i" :value="d.v" v-for="(d,i) in option">{{d.t}}</option>//배열 사용하는 법
		</select>
				
		<table class="table table-bordered" v-if="tableShow">   //v-if 로 조건문 판단 비슷한걸로 (v-show도 있음)
			<tr :key="i" v-for="(d,i) in option"
				<td>{{d.v}}</td>
				<td>{{d.t}}</td>
			</tr>
		</table>
	</div>

</template>



<scripts>
export default{

	data(){ //=================데이터 선언하는 법
		return{
			num: "zzzz",
			num2: "12345",
			options:[
				{v: "S", t: "서울"},
				{v: "A", t: "부산"},
				{v: "B", t: "울산"}
			],
			table: false
		}

	}//=================데이터 선언하는 법
	


	watch: {//=================데이터 실시간으로 계속 감지
		
		num(){   //변수명으로 만들기!
			console.log(this.num);
		}
		
	}//=================데이터 실시간으로 계속 감지
	
	
	
	
	
	method: {//=================함수 정의 하는 법
		
		getData(){
			alert(this.num);
		},
		setData(){
			this.num = "gogogog";
		},
		
		
	}//=================함수 정의 하는 법

}


</scripts>